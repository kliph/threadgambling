* Threadgambling
Streak with the thread.
* Initial setup
#+BEGIN_SRC sh :tangle script/bootstrap :shebang "#!/bin/bash"
  lein deps

  if psql -lqt | cut -d \| -f 1 | grep -q threadgambling-dev; then
      echo "ðŸŒ¯  DB exists"
  else
      echo "ðŸŒ¯  Creating DB"
      createdb threadgambling-dev
      createdb threadgambling-test
  fi
  echo "ðŸŒ¯  DB is good to go"

  lein run migrate
#+END_SRC
* Update dependencies
#+BEGIN_SRC sh :tangle script/update :shebang "#!/bin/bash"
script/bootstrap
#+END_SRC
* Tests
#+BEGIN_SRC sh :tangle script/test :shebang "#!/bin/bash"
  set -e

  script/update

  lein clean

  echo "ðŸŒ¯  Running tests..."
  if [ -n "$1" ]; then
      lein test "$1"
  else
      lein test
      lein doo phantom test once
  fi

#+END_SRC
* To Start a server
#+BEGIN_SRC sh :tangle script/server :shebang "#!/bin/bash"
  script/update

  echo "ðŸŒ¯  Starting server..."
  echo "ðŸŒ¯  You'll need to manually start a figwheel repl (See README.org for details)..."

  lein run -m threadgambling.web
#+END_SRC

* To start a server with figwheel
Connect to a repl using =C-c M-j=.  Run =(figwheel-up)=

* To migrate production
#+BEGIN_SRC sh :tangle script/migrate-production :shebang "#!/bin/bash"
  heroku run lein run migrate
#+END_SRC
* To switch builds
Switch builds by using =(switch-to-build :id)= from a figwheel cljs
repl
* To create a new migration
#+BEGIN_SRC sh
  lein migratus create <name>
#+END_SRC
